Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

 

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
bruteforce approach:
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        jdset=set()
        for i in range(len(nums)):
            if nums[i] in jdset:
                return nums[i]
            jdset.add(nums[i])
            

optimized approach(o(1)-space complexity):
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        slow=nums[0]
        fast=nums[0]
        while True:
            slow=nums[slow]
            fast=nums[nums[fast]]
            if slow==fast:
                break
        slow=nums[0]
        while slow!=fast:
            slow=nums[slow]
            fast=nums[fast]
        return fast
