Given an array of integers A and an integer B.

Find the total number of subarrays having bitwise XOR of all elements equals to B.
Input 1:

 A = [4, 2, 2, 6, 4]
 B = 6
Input 2:

 A = [5, 6, 7, 8, 9]
 B = 5

 class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return an integer
    def solve(self, A, B):
        d={}
        d[0]=1
        result=0
        n=len(A)
        curxor=0
        for num in A:
            curxor^=num
            expectxor=curxor^B 
            if expectxor in d:
                result+=d[expectxor]
            if curxor in d:
                d[curxor]+=1
            else:
                d[curxor]=1
                
        return result
            
        
