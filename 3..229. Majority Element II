Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times.
Example 1:
Input: nums = [3,2,3]
Output: [3]
Example 2:
Input: nums = [1]
Output: [1]
Example 3:
Input: nums = [1,2]
Output: [1,2]
class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        n=len(nums)
        count1,count2=0,0
        candidate1=0
        candidate2=1
        for num in nums:
            if num==candidate1:
                count1+=1
            elif num==candidate2:
                count2+=1
            elif count1==0:
                candidate1,count1=num,1
            elif count2==0:
                candidate2,count2=num,1
            else:
                count1-=1
                count2-=1
        print(count1,count2)
        if nums.count(candidate1)>n/3 and nums.count(candidate2)>n/3:
            return [candidate1,candidate2]
        elif nums.count(candidate1)>n/3:
            return [candidate1]
        elif nums.count(candidate2)>n/3:
            return [candidate2]
        else:
            return []
